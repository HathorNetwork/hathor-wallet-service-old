version: 0.2

# The envs are organized in a way that some of them will have prefixes, indicating the environment corresponding to them.
# In the build section we check which environment is being deployed and choose the envs accordingly.
# The ones without prefixes are used in all environments.
env:
  shell: bash
  git-credential-helper: yes
  variables:
    NODE_ENV: "production"
    MAX_ADDRESS_GAP: 20
    WALLET_CONN_LIMIT: 10
    BLOCK_REWARD_LOCK: 300
    CONFIRM_FIRST_ADDRESS: true
    VOIDED_TX_OFFSET: 20
    dev_DEFAULT_SERVER: "https://wallet-service.private-nodes.testnet.hathor.network/v1a/"
    dev_WS_DOMAIN: "ws.dev.wallet-service.testnet.hathor.network"
    dev_NETWORK: "testnet"
    dev_LOG_LEVEL: "debug"
    dev_NFT_AUTO_REVIEW_ENABLED: "true"
    dev_EXPLORER_STAGE: "dev"
    dev_EXPLORER_SERVICE_LAMBDA_ENDPOINT: "https://lambda.eu-central-1.amazonaws.com"
    dev_WALLET_SERVICE_LAMBDA_ENDPOINT: "https://lambda.eu-central-1.amazonaws.com"
    dev_PUSH_NOTIFICATION_ENABLED: "true"
    dev_PUSH_ALLOWED_PROVIDERS: "android,ios"
    dev_APPLICATION_NAME: "wallet-service-dev"
    testnet_DEFAULT_SERVER: "https://wallet-service.private-nodes.testnet.hathor.network/v1a/"
    testnet_WS_DOMAIN: "ws.wallet-service.testnet.hathor.network"
    testnet_NETWORK: "testnet"
    testnet_LOG_LEVEL: "debug"
    testnet_NFT_AUTO_REVIEW_ENABLED: "true"
    testnet_EXPLORER_STAGE: "testnet"
    testnet_EXPLORER_SERVICE_LAMBDA_ENDPOINT: "https://lambda.eu-central-1.amazonaws.com"
    testnet_WALLET_SERVICE_LAMBDA_ENDPOINT: "https://lambda.eu-central-1.amazonaws.com"
    testnet_PUSH_NOTIFICATION_ENABLED: "true"
    testnet_PUSH_ALLOWED_PROVIDERS: "android,ios"
    testnet_APPLICATION_NAME: "wallet-service-testnet"
    mainnet_staging_DEFAULT_SERVER: "https://wallet-service.private-nodes.hathor.network/v1a/"
    mainnet_staging_WS_DOMAIN: "ws.staging.wallet-service.hathor.network"
    mainnet_staging_NETWORK: "mainnet"
    mainnet_staging_LOG_LEVEL: "debug"
    mainnet_staging_NFT_AUTO_REVIEW_ENABLED: "false"
    mainnet_staging_EXPLORER_STAGE: "mainnet-staging"  # This stage doesn't exist in explorer-service and we don't need it because we have disabled the integration.
    mainnet_staging_EXPLORER_SERVICE_LAMBDA_ENDPOINT: "https://lambda.eu-central-1.amazonaws.com"
    mainnet_staging_WALLET_SERVICE_LAMBDA_ENDPOINT: "https://lambda.eu-central-1.amazonaws.com"
    mainnet_staging_PUSH_NOTIFICATION_ENABLED: "true"
    mainnet_staging_PUSH_ALLOWED_PROVIDERS: "android,ios"
    mainnet_staging_APPLICATION_NAME: "wallet-service-mainnet-staging"
    mainnet_DEFAULT_SERVER: "https://wallet-service.private-nodes.hathor.network/v1a/"
    mainnet_WS_DOMAIN: "ws.wallet-service.hathor.network"
    mainnet_NETWORK: "mainnet"
    mainnet_LOG_LEVEL: "debug"
    mainnet_NFT_AUTO_REVIEW_ENABLED: "true"
    mainnet_EXPLORER_STAGE: "mainnet"
    mainnet_EXPLORER_SERVICE_LAMBDA_ENDPOINT: "https://lambda.eu-central-1.amazonaws.com"
    mainnet_WALLET_SERVICE_LAMBDA_ENDPOINT: "https://lambda.eu-central-1.amazonaws.com"
    mainnet_PUSH_NOTIFICATION_ENABLED: "true"
    mainnet_PUSH_ALLOWED_PROVIDERS: "android,ios"
    mainnet_APPLICATION_NAME: "wallet-service-mainnet"
  # https://eu-central-1.console.aws.amazon.com/secretsmanager/home?region=eu-central-1#!/listSecrets
  secrets-manager:
    # CI secrets
    SLACK_OAUTH_TOKEN: "WalletService/ci:slack_oauth_token"
    SLACK_DEPLOYS_CHANNEL_ID: "WalletService/ci:slack_deploys_channel_id"
    # Dev secrets
    dev_ACCOUNT_ID: "WalletService/dev:account_id"
    dev_AUTH_SECRET: "WalletService/dev:auth_secret"
    dev_AWS_VPC_DEFAULT_SG_ID: "WalletService/dev:aws_vpc_default_sg_id"
    dev_AWS_SUBNET_ID_1: "WalletService/dev:aws_subnet_id_1"
    dev_AWS_SUBNET_ID_2: "WalletService/dev:aws_subnet_id_2"
    dev_AWS_SUBNET_ID_3: "WalletService/dev:aws_subnet_id_3"
    dev_DB_NAME: "WalletService/rds/dev:dbname"
    dev_DB_USER: "WalletService/rds/dev:username"
    dev_DB_PASS: "WalletService/rds/dev:password"
    dev_DB_ENDPOINT: "WalletService/rds/dev:host"
    dev_DB_PORT: "WalletService/rds/dev:port"
    dev_REDIS_URL: "WalletService/redis/dev:url"
    dev_REDIS_PASSWORD: "WalletService/redis/dev:password"
    dev_FIREBASE_PROJECT_ID: "WalletService/dev:FIREBASE_PROJECT_ID"
    dev_FIREBASE_PRIVATE_KEY_ID: "WalletService/dev:FIREBASE_PRIVATE_KEY_ID"
    dev_FIREBASE_PRIVATE_KEY: "WalletService/dev:FIREBASE_PRIVATE_KEY"
    dev_FIREBASE_CLIENT_EMAIL: "WalletService/dev:FIREBASE_CLIENT_EMAIL"
    dev_FIREBASE_CLIENT_ID: "WalletService/dev:FIREBASE_CLIENT_ID"
    dev_FIREBASE_AUTH_URI: "WalletService/dev:FIREBASE_AUTH_URI"
    dev_FIREBASE_TOKEN_URI: "WalletService/dev:FIREBASE_TOKEN_URI"
    dev_FIREBASE_AUTH_PROVIDER_X509_CERT_URL: "WalletService/dev:FIREBASE_AUTH_PROVIDER_X509_CERT_URL"
    dev_FIREBASE_CLIENT_X509_CERT_URL: "WalletService/dev:FIREBASE_CLIENT_X509_CERT_URL"
    dev_ALERT_MANAGER_REGION: "WalletService/dev:ALERT_MANAGER_REGION"
    dev_ALERT_MANAGER_TOPIC: "WalletService/dev:ALERT_MANAGER_TOPIC"
    # Testnet secrets
    testnet_ACCOUNT_ID: "WalletService/testnet:account_id"
    testnet_AUTH_SECRET: "WalletService/testnet:auth_secret"
    testnet_AWS_VPC_DEFAULT_SG_ID: "WalletService/testnet:aws_vpc_default_sg_id"
    testnet_AWS_SUBNET_ID_1: "WalletService/testnet:aws_subnet_id_1"
    testnet_AWS_SUBNET_ID_2: "WalletService/testnet:aws_subnet_id_2"
    testnet_AWS_SUBNET_ID_3: "WalletService/testnet:aws_subnet_id_3"
    testnet_DB_NAME: "WalletService/rds/testnet:dbname"
    testnet_DB_USER: "WalletService/rds/testnet:username"
    testnet_DB_PASS: "WalletService/rds/testnet:password"
    testnet_DB_ENDPOINT: "WalletService/rds/testnet:host"
    testnet_DB_PORT: "WalletService/rds/testnet:port"
    testnet_REDIS_URL: "WalletService/redis/testnet:url"
    testnet_REDIS_PASSWORD: "WalletService/redis/testnet:password"
    testnet_FIREBASE_PROJECT_ID: "WalletService/testnet:FIREBASE_PROJECT_ID"
    testnet_FIREBASE_PRIVATE_KEY_ID: "WalletService/testnet:FIREBASE_PRIVATE_KEY_ID"
    testnet_FIREBASE_PRIVATE_KEY: "WalletService/testnet:FIREBASE_PRIVATE_KEY"
    testnet_FIREBASE_CLIENT_EMAIL: "WalletService/testnet:FIREBASE_CLIENT_EMAIL"
    testnet_FIREBASE_CLIENT_ID: "WalletService/testnet:FIREBASE_CLIENT_ID"
    testnet_FIREBASE_AUTH_URI: "WalletService/testnet:FIREBASE_AUTH_URI"
    testnet_FIREBASE_TOKEN_URI: "WalletService/testnet:FIREBASE_TOKEN_URI"
    testnet_FIREBASE_AUTH_PROVIDER_X509_CERT_URL: "WalletService/testnet:FIREBASE_AUTH_PROVIDER_X509_CERT_URL"
    testnet_FIREBASE_CLIENT_X509_CERT_URL: "WalletService/testnet:FIREBASE_CLIENT_X509_CERT_URL"
    testnet_ALERT_MANAGER_REGION: "WalletService/testnet:ALERT_MANAGER_REGION"
    testnet_ALERT_MANAGER_TOPIC: "WalletService/testnet:ALERT_MANAGER_TOPIC"
    # Mainnet Staging secrets
    mainnet_staging_ACCOUNT_ID: "WalletService/mainnet_staging:account_id"
    mainnet_staging_AUTH_SECRET: "WalletService/mainnet_staging:auth_secret"
    mainnet_staging_AWS_VPC_DEFAULT_SG_ID: "WalletService/mainnet_staging:aws_vpc_default_sg_id"
    mainnet_staging_AWS_SUBNET_ID_1: "WalletService/mainnet_staging:aws_subnet_id_1"
    mainnet_staging_AWS_SUBNET_ID_2: "WalletService/mainnet_staging:aws_subnet_id_2"
    mainnet_staging_AWS_SUBNET_ID_3: "WalletService/mainnet_staging:aws_subnet_id_3"
    mainnet_staging_DB_NAME: "WalletService/rds/mainnet_staging:dbname"
    mainnet_staging_DB_USER: "WalletService/rds/mainnet_staging:username"
    mainnet_staging_DB_PASS: "WalletService/rds/mainnet_staging:password"
    mainnet_staging_DB_ENDPOINT: "WalletService/rds/mainnet_staging:host"
    mainnet_staging_DB_PORT: "WalletService/rds/mainnet_staging:port"
    mainnet_staging_REDIS_URL: "WalletService/redis/mainnet_staging:url"
    mainnet_staging_REDIS_PASSWORD: "WalletService/redis/mainnet_staging:password"
    mainnet_staging_FIREBASE_PROJECT_ID: "WalletService/mainnet_staging:FIREBASE_PROJECT_ID"
    mainnet_staging_FIREBASE_PRIVATE_KEY_ID: "WalletService/mainnet_staging:FIREBASE_PRIVATE_KEY_ID"
    mainnet_staging_FIREBASE_PRIVATE_KEY: "WalletService/mainnet_staging:FIREBASE_PRIVATE_KEY"
    mainnet_staging_FIREBASE_CLIENT_EMAIL: "WalletService/mainnet_staging:FIREBASE_CLIENT_EMAIL"
    mainnet_staging_FIREBASE_CLIENT_ID: "WalletService/mainnet_staging:FIREBASE_CLIENT_ID"
    mainnet_staging_FIREBASE_AUTH_URI: "WalletService/mainnet_staging:FIREBASE_AUTH_URI"
    mainnet_staging_FIREBASE_TOKEN_URI: "WalletService/mainnet_staging:FIREBASE_TOKEN_URI"
    mainnet_staging_FIREBASE_AUTH_PROVIDER_X509_CERT_URL: "WalletService/mainnet_staging:FIREBASE_AUTH_PROVIDER_X509_CERT_URL"
    mainnet_staging_FIREBASE_CLIENT_X509_CERT_URL: "WalletService/mainnet_staging:FIREBASE_CLIENT_X509_CERT_URL"
    mainnet_staging_ALERT_MANAGER_REGION: "WalletService/mainnet_staging:ALERT_MANAGER_REGION"
    mainnet_staging_ALERT_MANAGER_TOPIC: "WalletService/mainnet_staging:ALERT_MANAGER_TOPIC"
    # Mainnet secrets
    mainnet_ACCOUNT_ID: "WalletService/mainnet:account_id"
    mainnet_AUTH_SECRET: "WalletService/mainnet:auth_secret"
    mainnet_AWS_VPC_DEFAULT_SG_ID: "WalletService/mainnet:aws_vpc_default_sg_id"
    mainnet_AWS_SUBNET_ID_1: "WalletService/mainnet:aws_subnet_id_1"
    mainnet_AWS_SUBNET_ID_2: "WalletService/mainnet:aws_subnet_id_2"
    mainnet_AWS_SUBNET_ID_3: "WalletService/mainnet:aws_subnet_id_3"
    mainnet_DB_NAME: "WalletService/rds/mainnet:dbname"
    mainnet_DB_USER: "WalletService/rds/mainnet:username"
    mainnet_DB_PASS: "WalletService/rds/mainnet:password"
    mainnet_DB_ENDPOINT: "WalletService/rds/mainnet:host"
    mainnet_DB_PORT: "WalletService/rds/mainnet:port"
    mainnet_REDIS_URL: "WalletService/redis/mainnet:url"
    mainnet_REDIS_PASSWORD: "WalletService/redis/mainnet:password"
    mainnet_FIREBASE_PROJECT_ID: "WalletService/mainnet:FIREBASE_PROJECT_ID"
    mainnet_FIREBASE_PRIVATE_KEY_ID: "WalletService/mainnet:FIREBASE_PRIVATE_KEY_ID"
    mainnet_FIREBASE_PRIVATE_KEY: "WalletService/mainnet:FIREBASE_PRIVATE_KEY"
    mainnet_FIREBASE_CLIENT_EMAIL: "WalletService/mainnet:FIREBASE_CLIENT_EMAIL"
    mainnet_FIREBASE_CLIENT_ID: "WalletService/mainnet:FIREBASE_CLIENT_ID"
    mainnet_FIREBASE_AUTH_URI: "WalletService/mainnet:FIREBASE_AUTH_URI"
    mainnet_FIREBASE_TOKEN_URI: "WalletService/mainnet:FIREBASE_TOKEN_URI"
    mainnet_FIREBASE_AUTH_PROVIDER_X509_CERT_URL: "WalletService/mainnet:FIREBASE_AUTH_PROVIDER_X509_CERT_URL"
    mainnet_FIREBASE_CLIENT_X509_CERT_URL: "WalletService/mainnet:FIREBASE_CLIENT_X509_CERT_URL"
    mainnet_ALERT_MANAGER_REGION: "WalletService/mainnet:ALERT_MANAGER_REGION"
    mainnet_ALERT_MANAGER_TOPIC: "WalletService/mainnet:ALERT_MANAGER_TOPIC"
phases:
  install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    runtime-versions:
      nodejs: 16
      # name: version
    commands:
      - npm i --also=dev
  pre_build:
    commands:
      # This file is created in another CodeBuild specification that runs before this and is not committed to this repo.
      - export GIT_REF_TO_DEPLOY=$(cat git_ref_to_deploy)
  build:
    commands:
      - bash .codebuild/build.sh
